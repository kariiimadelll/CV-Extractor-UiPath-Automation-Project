<Activity mc:Ignorable="sap sap2010" x:Class="CvProject_DataExtraction" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://schemas.uipath.com/workflow/activities/intelligentocr" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uisad="clr-namespace:UiPath.IntelligentOCR.StudioWeb.Activities.DataExtraction;assembly=UiPath.IntelligentOCR.StudioWeb.Activities" xmlns:uisascb="clr-namespace:UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.CustomGptDocumentTypeF2Ce7A5B44D74DeaBfaa0Ef8Bfe6E4E0.Bundle;assembly=CustomGptDocumentTyp.8VMvRPl14D1km4Rx1H5eV91" xmlns:uisascb1="clr-namespace:UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.CustomGptDocumentTypeF7582C37851A4Fa3Bfb117B2C613Ba60.Bundle;assembly=CustomGptDocumentTyp.75yF72qEFlG1AQRea2a2okG3" xmlns:upr="clr-namespace:UiPath.Platform.ResourceHandling;assembly=UiPath.Platform" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_ExtractedData" Type="OutArgument(uisad:IDocumentData(uisascb:CustomGptDocumentTypeF2Ce7A5B44D74DeaBfaa0Ef8Bfe6E4E0))" />
    <x:Property Name="in_checkingFilePath" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>CvProject_DataExtraction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.DataExtraction</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.DocumentClassification</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.CustomGptDocumentType37941Aec528A43C5Adee4E20C98Dc6C2.Bundle</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.DataExtraction</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>UiPath.Platform</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.CustomGptDocumentType5C23C0Fc5D5A47DfB6166F455B56732E.Bundle</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.CustomGptDocumentType366Ec7E2Ae51409BAcbb34Add8B33A88.Bundle</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.CustomGptDocumentType9Ef8Ee6C41D34E9CBaa54399821421C0.Bundle</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.CustomGptDocumentType1A8Bea0F130547C3B587D7C174A38F06.Bundle</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.CustomGptDocumentType347577581D2B4906A519Cbc618270795.Bundle</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.CustomGptDocumentType4F4594BeEdc1434C85F3204E5Aa3Ee09.Bundle</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.CustomGptDocumentType3227688EE2E143F8B42E97Aabc78A119.Bundle</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.CustomGptDocumentType71294C4F530F489FBf6976677E03Fc64.Bundle</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.CustomGptDocumentTypeF7582C37851A4Fa3Bfb117B2C613Ba60.Bundle</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.CustomGptDocumentTypeF2Ce7A5B44D74DeaBfaa0Ef8Bfe6E4E0.Bundle</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.StudioWeb.Activities</AssemblyReference>
      <AssemblyReference>CustomGptDocumentTyp.Ni4ec2hCqEK1BQpN5188Vu22</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>NPOI.Core</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>UiPath.CodedWorkflows</AssemblyReference>
      <AssemblyReference>CustomGptDocumentTyp.xracL39aVwA1Lu5mP2cTsvt1</AssemblyReference>
      <AssemblyReference>CustomGptDocumentTyp.CNPzww5g9R1l2TEM33iACC</AssemblyReference>
      <AssemblyReference>CustomGptDocumentTyp.io92JcoP1K1l8Alc4fH3VP1</AssemblyReference>
      <AssemblyReference>CustomGptDocumentTyp.CDVZ43kAG6L1gu9RI4HmI3i2</AssemblyReference>
      <AssemblyReference>CustomGptDocumentTyp.IIL2L2rJf1G1QvdJU1lz875</AssemblyReference>
      <AssemblyReference>CustomGptDocumentTyp.uVssJ2P5taM1MyTV04o44ES</AssemblyReference>
      <AssemblyReference>CustomGptDocumentTyp.lwY3E2sI0AE15jl6KD9Hmi2</AssemblyReference>
      <AssemblyReference>CustomGptDocumentTyp.Sn8ND3UvBPD1bui3R3X89kW4</AssemblyReference>
      <AssemblyReference>CustomGptDocumentTyp.75yF72qEFlG1AQRea2a2okG3</AssemblyReference>
      <AssemblyReference>CustomGptDocumentTyp.8VMvRPl14D1km4Rx1H5eV91</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="CvProject_DataExtraction" sap:VirtualizedContainerService.HintSize="1025,3388" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="boolIsExist" />
      <Variable x:TypeArguments="upr:ILocalResource" Name="irPath" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch sap2010:Annotation.AnnotationText="Desc: this to extract data from pdf &#xA;pre: checking if the path exist&#xA;post:checking if there are data found after extraction" DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="632,3365" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Sequence DisplayName="Try" sap:VirtualizedContainerService.HintSize="630,2959" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="596,175" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Extrcating Data from the PDFs started&quot;]" />
          <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="596,2558" sap2010:WorkflowViewState.IdRef="RetryScope_1">
            <ui:RetryScope.ActivityBody>
              <ActivityAction>
                <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="554,2349" sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="PreCondition" sap:VirtualizedContainerService.HintSize="520,823" sap2010:WorkflowViewState.IdRef="Sequence_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:PathExists DisplayName="Path Exists" Exists="[boolIsExist]" sap:VirtualizedContainerService.HintSize="452,149" sap2010:WorkflowViewState.IdRef="PathExists_2" Path="[in_checkingFilePath]" PathType="File" Resource="[irPath]" />
                    <If Condition="[boolIsExist]" sap:VirtualizedContainerService.HintSize="452,582" sap2010:WorkflowViewState.IdRef="If_1">
                      <If.Then>
                        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="450,226" sap2010:WorkflowViewState.IdRef="Sequence_9">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="416,166" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;File &quot;+irPath.FullName.ToString+&quot; Found &quot;]" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="450,226" sap2010:WorkflowViewState.IdRef="Sequence_10">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="416,166" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Error" Message="[&quot;Can't find File path&quot;]" />
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                  <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="520,801" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="486,440" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                      <ui:CommentOut.Body>
                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,329" sap2010:WorkflowViewState.IdRef="Sequence_13">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <p:ExtractDocumentDataWithDocumentData x:TypeArguments="uisascb1:CustomGptDocumentTypeF7582C37851A4Fa3Bfb117B2C613Ba60" DocumentBounds="{x:Null}" DocumentObjectModel="{x:Null}" DocumentPath="{x:Null}" DocumentText="{x:Null}" ExtractionResults="{x:Null}" ExtractorDocumentType="{x:Null}" ExtractorResult="{x:Null}" ModernDocumentTypeId="{x:Null}" PersistenceId="{x:Null}" PredictionId="{x:Null}" ProjectVersionNumber="{x:Null}" Prompt="{x:Null}" ApplyAutoValidation="False" DisplayName="Extract Document Data" DocType="generative_extractor" FileInput="[irPath]" GenerateData="True" sap:VirtualizedContainerService.HintSize="416,269" sap2010:WorkflowViewState.IdRef="ExtractDocumentDataWithDocumentData`1_2" ProjectId="00000000-0000-0000-0000-000000000001" TimeoutInSeconds="3600">
                            <p:ExtractDocumentDataWithDocumentData.AutoValidationConfidenceThreshold>
                              <InArgument x:TypeArguments="s:Nullable(x:Int32)">
                                <Literal x:TypeArguments="s:Nullable(x:Int32)" Value="0" />
                              </InArgument>
                            </p:ExtractDocumentDataWithDocumentData.AutoValidationConfidenceThreshold>
                            <p:ExtractDocumentDataWithDocumentData.GptPromptWithVariables>
                              <InArgument x:TypeArguments="x:String" x:Key="first name" xml:space="preserve">From the following resume text, extract the candidate’s full name.
Only return the name. Do not include labels or extra information.</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="Address">Extract the most likely current address or location of the candidate from the following resume text. This may include a city, country, or full mailing address. If the address is not explicitly stated, infer the most likely location based on work experience, education, or contact info.</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="email" xml:space="preserve">From the following resume text, extract the candidate’s email address.
Only return the email address.</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="Job Title" xml:space="preserve">From the following resume text, extract the candidate’s current or most recent job title.
Focus on formal job roles (e.g. Manager, Consultant, Analyst) and avoid project or transaction names.
Only return the job title.</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="Phone Number" xml:space="preserve">From the following resume text, extract the candidate’s phone number(s).
Only return the phone number. If multiple numbers are present, return the one most likely to be for direct contact (e.g. mobile).</InArgument>
                            </p:ExtractDocumentDataWithDocumentData.GptPromptWithVariables>
                            <p:ExtractDocumentDataWithDocumentData.ProjectTag>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </p:ExtractDocumentDataWithDocumentData.ProjectTag>
                            <p:ExtractDocumentDataWithDocumentData.RuntimeAssetPath>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </p:ExtractDocumentDataWithDocumentData.RuntimeAssetPath>
                            <p:ExtractDocumentDataWithDocumentData.RuntimeTenantUrl>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </p:ExtractDocumentDataWithDocumentData.RuntimeTenantUrl>
                          </p:ExtractDocumentDataWithDocumentData>
                        </Sequence>
                      </ui:CommentOut.Body>
                    </ui:CommentOut>
                    <p:ExtractDocumentDataWithDocumentData x:TypeArguments="uisascb:CustomGptDocumentTypeF2Ce7A5B44D74DeaBfaa0Ef8Bfe6E4E0" DocumentBounds="{x:Null}" DocumentObjectModel="{x:Null}" DocumentPath="{x:Null}" DocumentText="{x:Null}" ExtractorDocumentType="{x:Null}" ExtractorResult="{x:Null}" ModernDocumentTypeId="{x:Null}" PersistenceId="{x:Null}" PredictionId="{x:Null}" ProjectVersionNumber="{x:Null}" Prompt="{x:Null}" ApplyAutoValidation="False" DisplayName="Extract Document Data" DocType="generative_extractor" ExtractionResults="[out_ExtractedData]" FileInput="[irPath]" GenerateData="True" sap:VirtualizedContainerService.HintSize="486,269" sap2010:WorkflowViewState.IdRef="ExtractDocumentDataWithDocumentData`1_3" ProjectId="00000000-0000-0000-0000-000000000001" TimeoutInSeconds="3600">
                      <p:ExtractDocumentDataWithDocumentData.AutoValidationConfidenceThreshold>
                        <InArgument x:TypeArguments="s:Nullable(x:Int32)">
                          <Literal x:TypeArguments="s:Nullable(x:Int32)" Value="0" />
                        </InArgument>
                      </p:ExtractDocumentDataWithDocumentData.AutoValidationConfidenceThreshold>
                      <p:ExtractDocumentDataWithDocumentData.GptPromptWithVariables>
                        <InArgument x:TypeArguments="x:String" x:Key="first name" xml:space="preserve">From the following resume text, extract the candidate’s full name.
Only return the name. Do not include labels or extra information.</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Address">Extract the most likely current address or location of the candidate from the following resume text. This may include a city, country, or full mailing address. If the address is not explicitly stated, infer the most likely location based on work experience, education, or contact info.</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="email" xml:space="preserve">From the following resume text, extract the candidate’s email address.
Only return the email address.</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Job Title" xml:space="preserve">From the following resume text, extract the candidate’s current or most recent job title.
Focus on formal job roles (e.g. Manager, Consultant, Analyst) and avoid project or transaction names.
Only return the job title.</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Phone Number" xml:space="preserve">From the following resume text, extract the candidate’s phone number(s).
Only return the phone number. If multiple numbers are present, return the one most likely to be for direct contact (e.g. mobile).</InArgument>
                      </p:ExtractDocumentDataWithDocumentData.GptPromptWithVariables>
                      <p:ExtractDocumentDataWithDocumentData.ProjectTag>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </p:ExtractDocumentDataWithDocumentData.ProjectTag>
                      <p:ExtractDocumentDataWithDocumentData.RuntimeAssetPath>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </p:ExtractDocumentDataWithDocumentData.RuntimeAssetPath>
                      <p:ExtractDocumentDataWithDocumentData.RuntimeTenantUrl>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </p:ExtractDocumentDataWithDocumentData.RuntimeTenantUrl>
                    </p:ExtractDocumentDataWithDocumentData>
                  </Sequence>
                  <Sequence DisplayName="PostCondition" sap:VirtualizedContainerService.HintSize="520,665" sap2010:WorkflowViewState.IdRef="Sequence_4">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If Condition="[not String.IsNullOrEmpty(out_ExtractedData.data.Email.Value.ToString)]" sap:VirtualizedContainerService.HintSize="452,582" sap2010:WorkflowViewState.IdRef="If_2">
                      <If.Then>
                        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="450,226" sap2010:WorkflowViewState.IdRef="Sequence_11">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="416,166" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Data Extraced successfully from &quot;+irPath.FullName.ToString]" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="450,226" sap2010:WorkflowViewState.IdRef="Sequence_12">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="416,166" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Error" Message="[&quot;No Data Found in &quot;+irPath.FullName.ToString]" />
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </Sequence>
              </ActivityAction>
            </ui:RetryScope.ActivityBody>
            <ui:RetryScope.Condition>
              <ActivityFunc x:TypeArguments="x:Boolean" />
            </ui:RetryScope.Condition>
          </ui:RetryScope>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="596,166" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Extrcating Data from the PDFs Ended&quot;]" />
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="630,90" sap2010:WorkflowViewState.IdRef="Sequence_7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <Sequence DisplayName="Finally" sap:VirtualizedContainerService.HintSize="596,90" sap2010:WorkflowViewState.IdRef="Sequence_8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </TryCatch.Finally>
    </TryCatch>
  </Sequence>
</Activity>